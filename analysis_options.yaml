# Refer - https://dart-lang.github.io/linter/lints/
# Refer - https://github.com/wrike/dart-code-metrics

analyzer:
  exclude:
    - build/**
    #- test/**
  plugins:
    - dart_code_metrics

  errors:
    missing_required_param: error
    missing_return: error
    todo: ignore
    prefer_single_quotes: error
    annotate_overrides: error
    prefer_const_constructors: error
    prefer_const_declarations: error
    inference_failure_on_function_invocation: ignore
    inference_failure_on_untyped_parameter: ignore
    
  strong-mode:
    implicit-casts: true
    implicit-dynamic: true

  language:
    strict-inference: true
    strict-raw-types: true

# configuration of dart_code_metrics
dart_code_metrics:
  anti-patterns:
    - long-method
  metrics:
    cyclomatic-complexity: 4
    lines-of-executable-code: 60
    number-of-arguments: 20
    maximum-nesting: 3
  metrics-exclude:
    - test/**
  rules:
    - no-boolean-literal-compare
    - no-empty-block
    - prefer-trailing-comma
    - prefer-conditional-expressions
    - no-equal-then-else

# line rules of of pedantic 1.9.0
linter:
  rules:
    - always_declare_return_types
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_empty_else
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_relative_lib_imports
    - avoid_return_types_on_setters
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - camel_case_extensions
    - curly_braces_in_flow_control_structures
    - empty_catches
    - empty_constructor_bodies
    - library_names
    - library_prefixes
    - no_duplicate_case_values
    - null_closures
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_for_elements_to_map_fromIterable
    - prefer_generic_function_type_aliases
    - prefer_if_null_operators
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_single_quotes
    - prefer_spread_collections
    - recursive_getters
    - slash_for_doc_comments
    - type_init_formals
    - unawaited_futures
    - unnecessary_const
    - unnecessary_new
    - unnecessary_null_in_if_null_operators
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_function_type_syntax_for_parameters
    - use_rethrow_when_possible
    - valid_regexps
